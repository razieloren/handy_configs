server {
	# Redirect all HTTP requests to HTTPS.
	listen 80;
	server_name _;
	return 301 https://$host$request_uri;
}

server {
	listen 443 http2 ssl default_server;
	root /var/www/[SERVER_NAME];
	index index.html index.htm;
	server_name *.[SERVER_NAME];

	ssl_certificate /etc/secrets/[SERVER_NAME]/fullchain.pem;
	ssl_certificate_key /etc/secrets/[SERVER_NAME]/privkey.pem;

	ssl_protocols TLSv1.3;
	ssl_prefer_server_ciphers on;
	ssl_ciphers EECDH+AESGCM:EDH+AESGCM;
	ssl_ecdh_curve secp384r1;
	ssl_session_timeout  10m;
	ssl_session_cache shared:SSL:10m;
	ssl_session_tickets off;
	ssl_stapling on;
	ssl_stapling_verify on;
	resolver 8.8.8.8 8.8.4.4 valid=300s;
	resolver_timeout 5s;
	add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
	add_header X-Frame-Options DENY;
	add_header X-Content-Type-Options nosniff;
	add_header X-XSS-Protection "1; mode=block";

	location /api {
		# API endpoint.
		proxy_set_header Host $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Real-IP $remote_addr;
		# This can be local host, or a unix socket.
		proxy_pass https://[API_SERVER_NAME];
	}

	location / {
		# Website.
		try_files $uri $uri/ =404;
	}
}
